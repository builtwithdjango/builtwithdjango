"""
Django settings for builtwithdjango project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import cloudinary
import environ
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False),
)
# reading .env file
environ.Env.read_env()

ENVIRONMENT = env("ENV")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# False if not in os.environ
DEBUG = env("DEBUG")

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "django.contrib.sites",
    "django.contrib.humanize",
    "django.forms",
    "taggit",
    "django_extensions",
    "django_component",
    "django_filters",
    "rest_framework",
    "anymail",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.twitter",
    "cloudinary",
    "widget_tweaks",
    "django_q",
    "webpack_boilerplate",
    "pages.apps.PagesConfig",
    "projects.apps.ProjectsConfig",
    "jobs.apps.JobsConfig",
    "podcast.apps.PodcastConfig",
    "makers.apps.MakersConfig",
    "blog.apps.BlogConfig",
    "newsletter.apps.NewsletterConfig",
    "users.apps.UsersConfig",
    "api.apps.ApiConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "kolo.middleware.KoloMiddleware",
]

ROOT_URLCONF = "builtwithdjango.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "builtins": [
                "django_component.templatetags",
            ],
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "builtwithdjango.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")

STATIC_URL = "/static/"

STATIC_ROOT = os.path.join(BASE_DIR, "static/")

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "frontend/build"),
]

WEBPACK_LOADER = {
    "MANIFEST_FILE": os.path.join(BASE_DIR, "frontend/build/manifest.json"),
}

MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"

# Sites
SITE_ID = 1

# Sentry Error Tracking
if not DEBUG:
    sentry_sdk.init(dsn=env("dsn"), integrations=[DjangoIntegration()])

EMAILOCTOPUS_API = env("EMAILOCTOPUS_API")
OCTO_LIST_ID = env("OCTO_LIST_ID")

INTERNAL_IPS = [
    "127.0.0.1",
]

AUTH_USER_MODEL = "users.CustomUser"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# config/settings.py
LOGIN_REDIRECT_URL = "home"
ACCOUNT_LOGOUT_REDIRECT_URL = "home"

# Paypal
PAYPAL_CLIENT_ID = env("PAYPAL_CLIENT_ID")

if DEBUG:
    PAYPAL_HOST = "https://www.paypal.com"
else:
    PAYPAL_HOST = "https://api-m.paypal.com"


REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny"],
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
}

ANYMAIL = {
    # (exact settings here depend on your ESP...)
    "MAILGUN_API_KEY": env("MAILGUN_API_KEY"),
    "MAILGUN_SENDER_DOMAIN": "mg.builtwithdjango.com",
}
EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"


DEFAULT_FROM_EMAIL = "rasul@builtwithdjango.com"
SERVER_EMAIL = "error@builtwithdjango.com"

# Overriding the HTML of Built-In Widgets
# from Two Scoops of Django 3.x
FORM_RENDERER = "django.forms.renderers.TemplatesSetting"

# django-allauth
# From django for professional book
AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

ACCOUNT_FORMS = {
    "login": "users.forms.CustomLoginForm",
    "signup": "users.forms.CustomUserCreationForm",
}

ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = "username"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_LOGOUT_ON_GET = True

# Stripe
STRIPE_PUBLISHABLE_KEY = env("STRIPE_PUBLISHABLE_KEY")
STRIPE_SECRET_KEY = env("STRIPE_SECRET_KEY")
STRIPE_ENDPOINT_SECRET = env("STRIPE_ENDPOINT_SECRET")
POST_JOB_PRODUCT_ID = env("POST_JOB_PRODUCT_ID")

# Cloudinary
cloudinary.config(
    cloud_name=env("CLOUDINARY_CLOUD_NAME"), api_key=env("CLOUDINARY_API_KEY"), api_secret=env("CLOUDINARY_API_SECRET")
)

# django-q
Q_CLUSTER = {
    "name": "builtwithdjango-q",
    "orm": "default",
    "timeout": 90,
    "retry": 120,
    "workers": 4,
    "max_attempts": 2,
}

# Screenshot API
SCREENSHOT_API_KEY = env("SCREENSHOT_API_KEY")

# Paddle
PADDLE_USER_AGENT = env("PADDLE_USER_AGENT")
PADDLE_SANDBOX = env("PADDLE_SANDBOX")
PADDLE_VENDOR_ID = env("PADDLE_VENDOR_ID")
PADDLE_API_KEY = env("PADDLE_API_KEY")
PADDLE_PUBLIC_KEY = """-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAoLacgZw7a0e5h/5SqY5B
bGO4Qvh5ebo970nBmhgOiJoSl3L04yklhsx3JAnyCdAnoSBNUxM1/kVIELe2gLmC
Fm3V1PvYO1JsNvif/ZVv0C1uMJAGVlrdGKcz9vQpvK+xaUf7owkNRUN5P0x0HA1v
uXRsO2amaLjiqNqW0toJV0BJbx5AaJfAskcdlkPPlv3B0VTLNJTvFNCcR/g1fi4G
V6KQNdcHC0UEx1Cu3yPzKZbN0nsj7hZSLdsqpnjgX1Z0w1+lM2W8EElUCr8Q216M
+HKx6z0w7FJiP8MqxIWAlpdZ0RPQiTowKILhqsRYRKZh1hvvfX4MHG1nTLOo3ESm
R8kf05hPkYQGZ7FNdsiyz1nqqm9RSTYoBjSxy5PfoIucviRAYfEkV0DTqrIC/Bgo
gLLSFSa1feqEOBk0tmXTi010OCGs4riEybATdNN0VS0Ar/pPsKQGgeoVsGOrqHHH
cRca3TGDXeeRI4q8z4/YzW3TDWGF2piH5oCrOVnUl3zXIcdEBo3FPqplDymXBMBS
EavXtA1/2ok/MFrD/3JQxlDmpn8M9HlpqHGtNrBsdtthGTnfHMdnFcZDzfLmFyAn
1/kPN5c2ovSh6v7nVMzafLjJaXpLbQecnUQnT4QaCTq9GavRrWJuFslB0Z5CwDRs
9Oj67CPHax6VE0Ld635rx4ECAwEAAQ==
-----END PUBLIC KEY-----"""
